apiVersion: apps/v1
kind: Deployment
metadata:
  name: credit-assessment-service
  labels:
    app: credit-assessment-service
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: credit-assessment-service
  template:
    metadata:
      labels:
        app: credit-assessment-service
      annotations:
        prometheus.io/scrape: "{{ ternary "true" "false" .Values.metrics.enabled }}"
        prometheus.io/path: "{{ .Values.metrics.path }}"
        prometheus.io/port: "{{ .Values.metrics.port }}"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: credit-assessment-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "{{ .Values.environment }}"
            - name: ConnectionStrings__LmsDatabase
              valueFrom:
                secretKeyRef:
                  name: credit-assessment-service-secrets
                  key: lmsDatabase
            - name: Vault__Address
              value: "{{ .Values.vault.address }}"
            - name: Vault__Role
              value: "{{ .Values.vault.role }}"
            - name: Vault__Token
              valueFrom:
                secretKeyRef:
                  name: credit-assessment-service-secrets
                  key: vaultToken
            - name: RabbitMq__Host
              value: "{{ .Values.rabbitmq.host }}"
            - name: RabbitMq__Username
              valueFrom:
                secretKeyRef:
                  name: credit-assessment-service-secrets
                  key: rabbitUser
            - name: RabbitMq__Password
              valueFrom:
                secretKeyRef:
                  name: credit-assessment-service-secrets
                  key: rabbitPassword
            - name: FeatureFlags__EnableStandaloneAssessment
              value: "{{ .Values.featureFlags.enableStandaloneAssessment }}"
            - name: FeatureFlags__EnableVaultRuleEngine
              value: "{{ .Values.featureFlags.enableVaultRuleEngine }}"
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/intellifin
              readOnly: true
      volumes:
        - name: vault-token
          secret:
            secretName: credit-assessment-service-secrets
            items:
              - key: vaultToken
                path: vault-token
