// <auto-generated />
using System;
using IntelliFin.TreasuryService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntelliFin.TreasuryService.Migrations
{
    [DbContext(typeof(TreasuryDbContext))]
    partial class TreasuryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.AccountingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BatchId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("PostedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("PostedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SourceTransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountCode")
                        .HasDatabaseName("IX_AccountingEntries_AccountCode");

                    b.HasIndex("EntryId")
                        .IsUnique()
                        .HasDatabaseName("IX_AccountingEntries_EntryId");

                    b.HasIndex("SourceTransactionId")
                        .HasDatabaseName("IX_AccountingEntries_SourceTransactionId");

                    b.HasIndex("TransactionDate")
                        .HasDatabaseName("IX_AccountingEntries_TransactionDate");

                    b.ToTable("AccountingEntries", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BankStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("FilePath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MinioObjectKey")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Processing");

                    b.Property<decimal?>("TotalCredits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDebits")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankCode")
                        .HasDatabaseName("IX_BankStatements_BankCode");

                    b.HasIndex("StatementDate")
                        .HasDatabaseName("IX_BankStatements_StatementDate");

                    b.HasIndex("StatementId")
                        .IsUnique()
                        .HasDatabaseName("IX_BankStatements_StatementId");

                    b.ToTable("BankStatements", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BankStatementEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Reference")
                        .HasDatabaseName("IX_BankStatementEntries_Reference");

                    b.HasIndex("StatementId")
                        .HasDatabaseName("IX_BankStatementEntries_StatementId");

                    b.HasIndex("TransactionDate")
                        .HasDatabaseName("IX_BankStatementEntries_TransactionDate");

                    b.ToTable("BankStatementEntries", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BranchFloat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HighThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("LowThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .IsUnique()
                        .HasDatabaseName("IX_BranchFloats_BranchId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_BranchFloats_Status");

                    b.ToTable("BranchFloats", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BranchFloatTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BranchFloatId")
                        .HasColumnType("int");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Reference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchFloatId");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("IX_BranchFloatTransactions_BranchId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_BranchFloatTransactions_CreatedAt");

                    b.ToTable("BranchFloatTransactions", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.DisbursementApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ApproverId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApproverName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("DisbursementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TreasuryTransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId")
                        .HasDatabaseName("IX_DisbursementApprovals_ApproverId");

                    b.HasIndex("DisbursementId")
                        .HasDatabaseName("IX_DisbursementApprovals_DisbursementId");

                    b.HasIndex("TreasuryTransactionId");

                    b.ToTable("DisbursementApprovals", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.EndOfDayReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CeoOverrideAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CeoOverrideBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CeoOverrideReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneratedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("InProgress");

                    b.Property<decimal?>("TotalCollections")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDisbursements")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("IX_EndOfDayReports_BranchId");

                    b.HasIndex("ReportDate")
                        .HasDatabaseName("IX_EndOfDayReports_ReportDate");

                    b.HasIndex("ReportId")
                        .IsUnique()
                        .HasDatabaseName("IX_EndOfDayReports_ReportId");

                    b.ToTable("EndOfDayReports", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ExpenseApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy")
                        .HasDatabaseName("IX_ExpenseApprovals_ApprovedBy");

                    b.HasIndex("RequestId")
                        .HasDatabaseName("IX_ExpenseApprovals_RequestId");

                    b.ToTable("ExpenseApprovals", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ExpenseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("MWK");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReceiptPath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Urgency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Normal");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("IX_ExpenseRequests_BranchId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ExpenseRequests_CreatedAt");

                    b.HasIndex("RequestId")
                        .IsUnique()
                        .HasDatabaseName("IX_ExpenseRequests_RequestId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_ExpenseRequests_Status");

                    b.ToTable("ExpenseRequests", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.LoanDisbursement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BankReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("MWK");

                    b.Property<Guid>("DisbursementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RequestedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("RequestedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id");

                    b.HasIndex("DisbursementId")
                        .IsUnique()
                        .HasDatabaseName("IX_LoanDisbursements_DisbursementId");

                    b.HasIndex("LoanId")
                        .HasDatabaseName("IX_LoanDisbursements_LoanId");

                    b.HasIndex("RequestedAt")
                        .HasDatabaseName("IX_LoanDisbursements_RequestedAt");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_LoanDisbursements_Status");

                    b.ToTable("LoanDisbursements", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ReconciliationBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("BatchType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MatchedEntries")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedEntries")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Processing");

                    b.Property<int>("TotalEntries")
                        .HasColumnType("int");

                    b.Property<int?>("UnmatchedEntries")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchId")
                        .IsUnique()
                        .HasDatabaseName("IX_ReconciliationBatches_BatchId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ReconciliationBatches_CreatedAt");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_ReconciliationBatches_Status");

                    b.ToTable("ReconciliationBatches", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ReconciliationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("MatchConfidence")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("MatchMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatchStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unmatched");

                    b.Property<Guid?>("MatchedTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BatchId")
                        .HasDatabaseName("IX_ReconciliationEntries_BatchId");

                    b.HasIndex("Reference")
                        .HasDatabaseName("IX_ReconciliationEntries_Reference");

                    b.HasIndex("MatchStatus", "Amount")
                        .HasDatabaseName("IX_ReconciliationEntries_MatchStatusAmount");

                    b.ToTable("ReconciliationEntries", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.TreasuryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("MWK");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CorrelationId")
                        .HasDatabaseName("IX_TreasuryTransactions_CorrelationId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_TreasuryTransactions_CreatedAt");

                    b.HasIndex("TransactionId")
                        .IsUnique()
                        .HasDatabaseName("IX_TreasuryTransactions_TransactionId");

                    b.HasIndex("TransactionType", "Status")
                        .HasDatabaseName("IX_TreasuryTransactions_TypeStatus");

                    b.ToTable("TreasuryTransactions", (string)null);
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BankStatementEntry", b =>
                {
                    b.HasOne("IntelliFin.TreasuryService.Models.BankStatement", "BankStatement")
                        .WithMany("Entries")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankStatement");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BranchFloatTransaction", b =>
                {
                    b.HasOne("IntelliFin.TreasuryService.Models.BranchFloat", "BranchFloat")
                        .WithMany("Transactions")
                        .HasForeignKey("BranchFloatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BranchFloat");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.DisbursementApproval", b =>
                {
                    b.HasOne("IntelliFin.TreasuryService.Models.LoanDisbursement", "LoanDisbursement")
                        .WithMany("Approvals")
                        .HasForeignKey("DisbursementId")
                        .HasPrincipalKey("DisbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntelliFin.TreasuryService.Models.TreasuryTransaction", null)
                        .WithMany("Approvals")
                        .HasForeignKey("TreasuryTransactionId");

                    b.Navigation("LoanDisbursement");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ExpenseApproval", b =>
                {
                    b.HasOne("IntelliFin.TreasuryService.Models.ExpenseRequest", "ExpenseRequest")
                        .WithMany("Approvals")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseRequest");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ReconciliationEntry", b =>
                {
                    b.HasOne("IntelliFin.TreasuryService.Models.ReconciliationBatch", "Batch")
                        .WithMany("Entries")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BankStatement", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.BranchFloat", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ExpenseRequest", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.LoanDisbursement", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.ReconciliationBatch", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("IntelliFin.TreasuryService.Models.TreasuryTransaction", b =>
                {
                    b.Navigation("Approvals");
                });
#pragma warning restore 612, 618
        }
    }
}
