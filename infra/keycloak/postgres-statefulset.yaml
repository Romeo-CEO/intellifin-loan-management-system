apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgresql
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: keycloak
spec:
  serviceName: keycloak-postgresql
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak-postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak-postgresql
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: keycloak
      annotations:
        linkerd.io/inject: "disabled"
    spec:
      serviceAccountName: keycloak
      securityContext:
        fsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
      initContainers:
        - name: wait-for-volume
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              set -euo pipefail
              mkdir -p /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgresql
          image: postgres:16.3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: keycloak_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: password
            - name: REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: replPassword
            - name: METRICS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: metricsPassword
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
          command:
            - bash
            - -ec
            - |
              exec docker-entrypoint.sh postgres -c config_file=/etc/postgresql/postgresql.conf
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: config
              mountPath: /docker-entrypoint-initdb.d/init-replication.sh
              subPath: init-replication.sh
            - name: wal-archive
              mountPath: /var/lib/postgresql/data/wal_archive
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "/usr/lib/postgresql/16/bin/pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "/usr/lib/postgresql/16/bin/pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 2
              memory: 4Gi
        - name: postgres-exporter
          image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
          imagePullPolicy: IfNotPresent
          env:
            - name: DATA_SOURCE_URI
              value: localhost:5432/keycloak_db?sslmode=disable
            - name: DATA_SOURCE_USER
              value: keycloak_metrics
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: metricsPassword
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: "true"
          ports:
            - containerPort: 9187
              name: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      volumes:
        - name: config
          configMap:
            name: keycloak-postgresql-config
            items:
              - key: postgresql.conf
                path: postgresql.conf
                mode: 0644
              - key: init-replication.sh
                path: init-replication.sh
                mode: 0755
        - name: wal-archive
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: keycloak-postgresql
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
