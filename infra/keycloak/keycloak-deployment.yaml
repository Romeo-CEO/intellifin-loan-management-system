apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: keycloak
spec:
  replicas: 3
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: identity-provider
        app.kubernetes.io/part-of: keycloak
      annotations:
        linkerd.io/inject: "enabled"
        config.linkerd.io/proxy-log-level: "warn,linkerd=info"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: keycloak
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: keycloak
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloak
      initContainers:
        - name: wait-for-database
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              until nc -zv keycloak-postgresql.keycloak.svc.cluster.local 5432; do
                echo "waiting for keycloak-postgresql"
                sleep 3
              done
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.4
          imagePullPolicy: IfNotPresent
          args:
            - start
            - --optimized
            - --hostname=keycloak.intellifin.local
            - --hostname-strict=false
            - --proxy=edge
            - --http-enabled=true
            - --http-port=8080
            - --metrics-enabled=true
            - --health-enabled=true
            - --spi-theme-static-max-age=604800
            - --spi-theme-cache-templates=true
            - --spi-theme-cache-themes=true
            - --cache=ispn
            - --cache-stack=kubernetes
            - --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true
            - --import-realm
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-bootstrap
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-bootstrap
                  key: password
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: keycloak-postgresql.keycloak.svc.cluster.local
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: password
            - name: KC_DB_URL_DATABASE
              value: keycloak_db
            - name: KC_DB_POOL_INITIAL_SIZE
              value: "20"
            - name: KC_DB_POOL_MIN_SIZE
              value: "20"
            - name: KC_DB_POOL_MAX_SIZE
              value: "100"
            - name: KC_TRANSACTION_XA_ENABLED
              value: "false"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_LOG_LEVEL
              value: "INFO"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_PROXY
              value: edge
            - name: KC_HOSTNAME_URL
              value: https://keycloak.intellifin.local
            - name: KC_HOSTNAME_ADMIN_URL
              value: https://keycloak.intellifin.local/admin
            - name: KC_HTTP_RELATIVE_PATH
              value: /
            - name: KC_CACHE
              value: ispn
            - name: KC_CACHE_STACK
              value: kubernetes
            - name: KC_SPI_EMAIL_SMTP_HOST
              value: smtp.intellifin.local
            - name: KC_SPI_EMAIL_SMTP_PORT
              value: "587"
            - name: KC_SPI_EMAIL_SMTP_STARTTLS
              value: "true"
            - name: KC_SPI_EMAIL_SMTP_AUTH
              value: "true"
            - name: KC_SPI_EMAIL_SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-smtp-credentials
                  key: username
            - name: KC_SPI_EMAIL_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-smtp-credentials
                  key: password
            - name: KC_FEATURES
              value: "token-exchange,admin-fine-grained-authz"
            - name: JAVA_OPTS_APPEND
              value: >-
                -XX:+UseG1GC -XX:MaxRAMPercentage=65 -Djboss.modules.system.pkgs=org.jboss.byteman
                -Dkeycloak.profile=preview
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          startupProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            requests:
              cpu: "500m"
              memory: 2Gi
            limits:
              cpu: "2"
              memory: 4Gi
          volumeMounts:
            - name: realm-config
              mountPath: /opt/keycloak/data/import/IntelliFin-realm.json
              subPath: IntelliFin-realm.json
              readOnly: true
            - name: theme-intellifin
              mountPath: /opt/keycloak/themes/intellifin
              subPath: intellifin
              readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: realm-config
          configMap:
            name: keycloak-realm-config
        - name: theme-intellifin
          configMap:
            name: keycloak-theme-intellifin
